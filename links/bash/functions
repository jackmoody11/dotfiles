#!/bin/bash

###################################################
#################### Functions ####################
###################################################

###################### Git ########################
# Git add and commit
gac() {
    git add . && git commit -m "$1"
}
# Git add, commit, and push
gacp() {
    git add . && git commit -m "$1" && git push
}
# Git commit and push
gcp() {
    git commit -m "$1" && git push
}

# .gitignore update
giup() {
    git rm -r --cached .
}
# Create new git branch and go into it
gnb() {
    git checkout -b "$1" && git checkout "$1"
}

# Show git branch on command line
git_branch() {
  git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/(\1)\ /';
}

# Easily google Github repositories from command line
github() {
  if [[ "$(uname)" == "Darwin" ]]; then
    if [[ $# -eq 0 ]] ;
    then
        open 'https://github.com'
    elif [[ $1 == */* ]] ;
    then
        open 'https://github.com/'$1
    elif [[ $1 == 'me' ]] ;
    then
        open 'https://github.com/jackmoody11'
    else
        echo "Invalid option. Valid options include <user>/<repo>, 'me', and ''"
    fi
  fi
}

############### General ################
# Delete all PDFs in current directory (with confirmation)
delpdf(){
    while true; do
    echo "PDFs to be deleted"
    find . -name '*.pdf'
    read -p "Do you wish to delete all PDf files in this directory?" yn
    case $yn in
        [Yy]* ) find . -name '*.pdf' -delete; break;;
        [Nn]* ) break;;
        * ) echo "Please answer yes or no.";;
    esac
done

}

mkd() {
    mkdir "$1" && cd "$1"
}

manpdf() {
  if [[ "$(uname)" == "Darwin" ]]; then
    man -t $1 | open -f -a /Applications/Preview.app
  fi
}

# Easily open website in google from command line
google() {
    if open -Ra "Google Chrome" ;
    then
        if [[ $1 == https://* ]] || [[ $1 == http://* ]] ;
        then
            open -a 'Google Chrome' $1
        else
            open -a 'Google Chrome' 'https://'$1
        fi
    else
        echo "Google Chrome must be installed to use this function."
    fi
}
